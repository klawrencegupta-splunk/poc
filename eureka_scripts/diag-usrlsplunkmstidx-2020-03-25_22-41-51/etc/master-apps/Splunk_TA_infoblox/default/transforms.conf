[infoblox_branch_source_type_1]
DEST_KEY = MetaData:Sourcetype
REGEX = \sdhcpd\[
FORMAT = sourcetype::infoblox:dhcp

[infoblox_branch_source_type_2]
DEST_KEY = MetaData:Sourcetype
REGEX = \snamed\[
FORMAT = sourcetype::infoblox:dns

[infoblox_branch_source_type_3]
DEST_KEY = MetaData:Sourcetype
REGEX = \sthreat-protect-log\[
FORMAT = sourcetype::infoblox:threatprotect

[infoblox_dhcp_extract_field_0]
REGEX = (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\sdhcpd\[(\d+)\]\:
FORMAT = infoblox_ip::$1 pid::$2

[infoblox_dhcp_extract_field_1]
REGEX = (DHCPDISCOVER)\sfrom\s([0-9a-zA-Z]{2}(?:\:[0-9a-zA-Z]{2}){5})\s(?:\(([^\)]+)\)\s)?via\s([^\:$]+)(?:\:\s([^$]+))?$
FORMAT = dhcp_type::$1 src_mac::$2 src_hostname::$3 relay::$4 dhcp_discover_comment::$5

[infoblox_dhcp_extract_field_2]
REGEX = (DHCPOFFER)\son\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\sto\s([0-9a-zA-Z]{2}(?:\:[0-9a-zA-Z]{2}){5})\s(?:\(([^\)]+)\)\s)?via\s(.+)\srelay\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\slease\-duration\s(\d+)$
FORMAT = dhcp_type::$1 dest_ip::$2 dest_mac::$3 dest_hostname::$4 interface::$5 relay::$6 lease_duration::$7

[infoblox_dhcp_extract_field_3]
REGEX = (DHCPINFORM)\sfrom\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\svia\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s*(?:\:\s*(.+))?
FORMAT = dhcp_type::$1 src_ip::$2 relay::$3 dhcp_inform_comment::$4

[infoblox_dhcp_extract_field_4]
REGEX = (DHCPACK)\sto\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s\(([0-9a-zA-Z]{2}(?:\:[0-9a-zA-Z]{2}){5})\)\svia\s(\w+)
FORMAT = dhcp_type::$1 dest_ip::$2 dest_mac::$3 interface::$4

[infoblox_dhcp_extract_field_5]
REGEX = (DHCPNAK)\sto\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s\(([0-9a-zA-Z]{2}(?:\:[0-9a-zA-Z]{2}){5})\)\svia\s(\S+) 
FORMAT = dhcp_type::$1 src_ip::$2 src_mac::$3 interface::$4

[infoblox_dhcp_extract_field_6]
REGEX = (DHCPACK)\son\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\sto\s([0-9a-zA-Z]{2}(?:\:[0-9a-zA-Z]{2}){5})\s(?:\(([^)]+)\)\s)?via\s(\S+)\srelay\s(\S+)\slease\-duration\s(\d+)
FORMAT = dhcp_type::$1 dest_ip::$2 dest_mac::$3 dest_hostname::$4 interface::$5 relay::$6 lease_duration::$7

[infoblox_dhcp_extract_field_7]
REGEX = (DHCPREQUEST)\sfor\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s(?:\(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\)\s)?from\s([0-9a-zA-Z]{2}(?:\:[0-9a-zA-Z]{2}){5})\s(?:\(([^\)]+)\)\s)?via\s(\S+)
FORMAT = dhcp_type::$1 src_ip::$2 src_mac::$3 src_hostname::$4 relay::$5

[infoblox_dhcp_extract_field_8]
REGEX = (DHCPRELEASE)\sof\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\sfrom\s([0-9a-zA-Z]{2}(?:\:[0-9a-zA-Z]{2}){5})\s(?:\(([^\)]+)\)\s)?via\s(\S+)
FORMAT = dhcp_type::$1 src_ip::$2 src_mac::$3 src_hostname::$4 relay::$5

[infoblox_dhcp_extract_field_9]
REGEX = ddns\.c\(\d+\)\:\s([^\.]+)\s([^$]+)
FORMAT = fail_message::$1 detail_fail_message::$2

[infoblox_dhcp_extract_field_10]
REGEX = lease\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})
SOURCE_KEY = detail_fail_message
FORMAT = lease_ip::$1

[infoblox_dhcp_extract_field_11]
REGEX = (?i)(REFUSED|Invalid|ignored|rejected|DHCPDECLINE|DHCPNAK|removed|removing)
FORMAT = action_blocked::$1

[dns_request]
REGEX = client\s(?<dns_request_client_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|(?:::)?(?:[a-zA-Z\d]{1,4}::?){1,7}[a-zA-Z\d]{0,4})#(?<dns_request_client_port>\d+).*\s(?<message_type>query):\s(?<dns_request_queried_domain>\S+)\s(?<dns_request_class_name>\w+)\s(?<dns_request_type_name>\w+)\s(?<dns_request_setDC>(?:\+|\-)\S*)\s\((?<dns_request_name_serverIP>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|(?:::)?(?:[a-zA-Z\d]{1,4}::?){1,7}[a-zA-Z\d]{0,4})\)

[dns_response]
REGEX = \S+\s+(?<server_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\snamed\[(?<pid>\d+)\]\:\s(?:infoblox-responses:\s)?(?<log_date>\S+)\s(?<log_time>\S+)\sclient\s(?<dns_response_client_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|(?:::)?(?:[a-zA-Z\d]{1,4}::?){1,7}[a-zA-Z\d]{0,4})#(?<dns_response_client_port>\d+)?[\D]*\s(?<dns_response_protocol>\w+):\squery:\s(?<dns_response_queried_domain>\S+)\s(?<dns_response_class_name>\w+)\s(?<dns_response_type_name>\w+)\s(?<message_type>response):\s(?<dns_response_rcode>\w+)\s(?<dns_response_flags>\S+)\s?(?<dns_response_RR_in_TEXT>[\S+\s+]*)? 

[dns_records_extract]
REGEX = (?<dns_answer_name>\S+)\s(?<dns_answer_ttl>\d+)\s(?<dns_class>\S+)\s(?<dns_type>\S+)\s(?<dns_rdata>\S+)
SOURCE_KEY = dns_record
MV_ADD=true

[dns_incepted]
REGEX=(?<dns_record>[^;]+)
SOURCE_KEY=dns_response_RR_in_TEXT
MV_ADD=true

[dns_request_src]
REGEX=(?<src_req>.+)
SOURCE_KEY=dns_request_name_serverIP

[dns_response_src]
REGEX=(?<src_resp>.+)
SOURCE_KEY=dns_response_client_ip

[dns_response_dest]
REGEX=(?<dest_resp>.+)
SOURCE_KEY=server_ip

[dns_request_record_type]
REGEX=(?<record_type_req>.+)
SOURCE_KEY=dns_request_type_name

[dns_response_record_type]
REGEX=(?<record_type_resp>.+)
SOURCE_KEY=dns_response_type_name

# Extract rpz fields from Common Event Format (CEF:0)
[dns_rpz_cef_0]
REGEX = CEF:\d\|Infoblox\|[^\|]+\|([\d\.-]+)\|([^\|]+)\|([^\|]+)\|(\d)
SOURCE_KEY = named_message
FORMAT = product_version::$1 dns_rpz_type::$2 dns_rpz_policy_action::$3 dns_rpz_severity_id::$4

[infoblox_dns_extract_field_0]
REGEX = ([^\s]+)?\s*named\[(\d+)\]:\s(?:infoblox-responses:\s)?(.+)$
FORMAT = infoblox_host::$1 pid::$2 named_message::$3

[infoblox_dns_extract_field_1]
REGEX = (updating)
FORMAT = is_updating::$1

[infoblox_dns_extract_field_2]
REGEX = DNS\sformat\serror\sfrom\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})#(\d{1,5})\sresolving\s(\S+)\/(\S+)\sfor\sclient\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})#(\d{1,5})\:\s(.+)
SOURCE_KEY = named_message
FORMAT = dest_ip::$1 dest_port::$2 error_query::$3 the_query_type::$4 src_ip::$5 src_port::$6 named_dns_format_error_message::$7

[infoblox_dns_extract_field_3]
REGEX = ^zone\s([^/]+)\/IN
SOURCE_KEY = named_message
FORMAT = zone::$1

[infoblox_dns_extract_field_4]
REGEX = transfer\sof\s'([^/]+)/IN'\sfrom\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})#(\d{1,5}):(.+)
SOURCE_KEY = named_message
FORMAT = zone::$1 dest_ip::$2 dest_port::$3 transfer_message::$4

[infoblox_dns_extract_field_5]
REGEX = client\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}#\d{1,5}(?:.+)?:\s(.*)
SOURCE_KEY = named_message
FORMAT = client_message::$1

[infoblox_dns_extract_field_6]
REGEX = error\s\(FORMERR\)\sresolving\s+'([^'/]+)/([^/]+)/IN':\s+(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})#(\d{1,5})
SOURCE_KEY = named_message
FORMAT = error_query::$1 the_query_type::$2 dest_ip::$3 dest_port::$4

[infoblox_dns_extract_field_8]
REGEX = query\s(?:\(cache\)\s)?'([^/]+)/([^/]+)/IN'\s(.+)
SOURCE_KEY = client_message
FORMAT = cache_query::$1 the_query_type::$2 result::$3

[infoblox_dns_extract_field_9]
REGEX = zone\s'([^']+)'
SOURCE_KEY = client_message
FORMAT = zone::$1

[infoblox_dns_extract_field_10]
REGEX = connected\susing\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})#(\d{1,5})
SOURCE_KEY = transfer_message
FORMAT = src_ip::$1 src_port::$2

[infoblox_dns_extract_field_11]
REGEX = client\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})#(\d{1,5})\/key\s(.+)
FORMAT = src_ip::$1 src_port::$2 named_message_client_key_message::$3

[infoblox_dns_extract_field_12]
REGEX = infoblox\s\(([^\)]+)\)\:[^\:]+\:[^\:]+\:[^\:]+\:(.+)
SOURCE_KEY = named_message_client_key_message
FORMAT = zone::$1 bad_zone_reason::$2

[infoblox_dns_extract_field_13]
REGEX = (dhcp_updater_default)\:\ssigner\s"([^"]+)"\s+(\S+)
SOURCE_KEY = named_message_client_key_message
FORMAT = command::$1 signer_name::$2 signer_status::$3

[infoblox_dns_extract_field_14]
REGEX = (dhcp_updater_default)\:\supdating\szone\s'([^']+)'\:\s(.+)\sat\s'([^']+)'\s(\w+)
SOURCE_KEY = named_message_client_key_message
FORMAT = command::$1 zone::$2 update_action::$3 record::$4 record_type_update::$5

[infoblox_dns_extract_field_15]
REGEX = (adding|deleting)\s(?<object>[^$]+)
SOURCE_KEY = update_action
FORMAT = the_action::$1 object::$2

[infoblox_dns_extract_field_16]
REGEX = client\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})#(\d{1,5})\:?\s[\S]+\s(?:query\s)?(?:\(cache\)\s)?'(\S+)'\sdenied
SOURCE_KEY = named_message
FORMAT = src_ip::$1 src_port::$2 cache_query::$3

[infoblox_dns_extract_field_17]
REGEX = client\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})#(\d{1,5})\:?\sreceived\snotify\sfor\szone\s'(\S+)'
SOURCE_KEY = named_message
FORMAT = src_ip::$1 src_port::$2 cache_query::$3

[infoblox_dns_rpz_qname_fields]
REGEX = rpz\s+(\w+)\s+\w+\s+\w+\s+([\w\.]+)\s+\[\w+\]\s+via\s+([\w\.]+)
SOURCE_KEY = named_message
FORMAT = rpz_policy_trigger::$1 dns_rpz_query::$2 dns_rpz_reponse_query::$3

[infoblox_threatprotect_field_0]
REGEX=CEF:0\|\w+\|(\w+\s\w+)\|(\d.\d.\d-\d+)\|(\d+)\|([^\|]+)\|(\d)
FORMAT= nios_product::$1 product_version::$2 rule_id::$3 rule_name::$4 severity_id::$5

[infoblox_threatprotect_field_1]
REGEX=([^\s]+)\sthreat-protect-log\[(\d+)\]
FORMAT=infoblox_host::$1 pid::$2

[infoblox_dns_query_type_lookup]
filename = infoblox_dns_query_type.csv
case_sensitive_match = false

[infoblox_dns_reply_code_id_lookup]
filename = infoblox_dns_reply_code_id.csv
case_sensitive_match = false

[infoblox_severity_lookup]
filename = infoblox_severity_lookup.csv
case_sensitive_match = false
